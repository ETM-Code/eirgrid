   Compiling eirgrid v0.1.0 (/Users/eoghancollins/eirgrid)
warning: eirgrid@0.1.0: Successfully copied Metal shader to: /Users/eoghancollins/eirgrid/target/debug/build/eirgrid-80675a76eb0fd5ce/out/../../../metal_location_search.metal
warning: derive helper attribute is used before it is introduced
 --> aiSimulator/cli.rs:3:3
  |
3 | #[command(author, version, about, long_about = None)]
  |   ^^^^^^^
4 | #[derive(Parser)]
  |          ------ the attribute is introduced here
  |
  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
  = note: for more information, see issue #79202 <https://github.com/rust-lang/rust/issues/79202>
  = note: `#[warn(legacy_derive_helpers)]` on by default

warning: unused import: `std::sync::Arc`
 --> aiSimulator/main.rs:4:5
  |
4 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `AtomicUsize` and `Ordering`
 --> aiSimulator/main.rs:5:25
  |
5 | use std::sync::atomic::{AtomicUsize, Ordering};
  |                         ^^^^^^^^^^^  ^^^^^^^^

warning: unused import: `std::path::Path`
 --> aiSimulator/main.rs:6:5
  |
6 | use std::path::Path;
  |     ^^^^^^^^^^^^^^^

warning: unused imports: `Duration` and `Instant`
 --> aiSimulator/main.rs:7:17
  |
7 | use std::time::{Duration, Instant};
  |                 ^^^^^^^^  ^^^^^^^

warning: unused import: `std::fs::File`
 --> aiSimulator/main.rs:8:5
  |
8 | use std::fs::File;
  |     ^^^^^^^^^^^^^

warning: unused import: `std::io::Write`
 --> aiSimulator/main.rs:9:5
  |
9 | use std::io::Write;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::str::FromStr`
  --> aiSimulator/main.rs:10:5
   |
10 | use std::str::FromStr;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `RwLock`
  --> aiSimulator/main.rs:15:25
   |
15 | use parking_lot::{self, RwLock};
   |                         ^^^^^^

warning: unused import: `serde::Serialize`
  --> aiSimulator/main.rs:16:5
   |
16 | use serde::Serialize;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `chrono::Local`
  --> aiSimulator/main.rs:19:5
   |
19 | use chrono::Local;
   |     ^^^^^^^^^^^^^

warning: unused import: `crate::poi::Coordinate`
 --> aiSimulator/settlements_loader.rs:6:5
  |
6 | use crate::poi::Coordinate;
  |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `CarbonOffsetType`
  --> aiSimulator/csv_export.rs:10:42
   |
10 | use crate::carbon_offset::{CarbonOffset, CarbonOffsetType};
   |                                          ^^^^^^^^^^^^^^^^

warning: unused imports: `IRELAND_MAX_LAT` and `IRELAND_MAX_LON`
  --> aiSimulator/csv_export.rs:11:62
   |
11 | use crate::constants::{BASE_YEAR, END_YEAR, IRELAND_MIN_LAT, IRELAND_MAX_LAT, IRELAND_MIN_LON, IRELAND_MAX_LON, GRID_SCALE_X, GRID_SCALE_Y};
   |                                                              ^^^^^^^^^^^^^^^                   ^^^^^^^^^^^^^^^

warning: unnecessary parentheses around block return value
   --> aiSimulator/csv_export.rs:424:33
    |
424 | ...                   ((population as f64 - *prev_population as f64) / *prev_population as f64 * 100.0)
    |                       ^                                                                               ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
424 -                                 ((population as f64 - *prev_population as f64) / *prev_population as f64 * 100.0)
424 +                                 (population as f64 - *prev_population as f64) / *prev_population as f64 * 100.0
    |

warning: unnecessary parentheses around block return value
   --> aiSimulator/csv_export.rs:443:21
    |
443 |                     (power_usage * 1000.0 / population as f64) // Convert MW to kW per capita
    |                     ^                                        ^
    |
help: remove these parentheses
    |
443 -                     (power_usage * 1000.0 / population as f64) // Convert MW to kW per capita
443 +                     power_usage * 1000.0 / population as f64 // Convert MW to kW per capita
    |

warning: unused import: `std::error::Error`
 --> aiSimulator/metrics.rs:1:5
  |
1 | use std::error::Error;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `crate::generator::Generator`
 --> aiSimulator/metrics.rs:3:5
  |
3 | use crate::generator::Generator;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::map_handler::Map`
 --> aiSimulator/metrics.rs:4:5
  |
4 | use crate::map_handler::Map;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `OperationCategory`, `PowerCalcType`, and `self`
 --> aiSimulator/metrics.rs:8:22
  |
8 | use crate::logging::{self, OperationCategory, PowerCalcType};
  |                      ^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unused import: `crate::const_funcs`
 --> aiSimulator/metrics.rs:9:5
  |
9 | use crate::const_funcs;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::action_weights::SimulationMetrics`
 --> aiSimulator/simulation.rs:8:5
  |
8 | use crate::action_weights::SimulationMetrics;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `SimulationMetrics`
 --> aiSimulator/actions.rs:6:41
  |
6 | use crate::action_weights::{GridAction, SimulationMetrics};
  |                                         ^^^^^^^^^^^^^^^^^

warning: unused import: `crate::power_storage::PowerStorageSystem as PowerStorage`
 --> aiSimulator/actions.rs:7:5
  |
7 | use crate::power_storage::PowerStorageSystem as PowerStorage;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `YearlyMetrics`
  --> aiSimulator/multi_simulation.rs:13:22
   |
13 | use crate::metrics::{YearlyMetrics, SimulationResult};
   |                      ^^^^^^^^^^^^^

warning: unused import: `crate::action_weights::GridAction`
 --> aiSimulator/iteration.rs:4:5
  |
4 | use crate::action_weights::GridAction;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `YearlyMetrics`
 --> aiSimulator/iteration.rs:5:22
  |
5 | use crate::metrics::{YearlyMetrics, SimulationResult};
  |                      ^^^^^^^^^^^^^

warning: unused imports: `Rng` and `SeedableRng`
  --> aiSimulator/iteration.rs:10:12
   |
10 | use rand::{Rng, SeedableRng};
   |            ^^^  ^^^^^^^^^^^

warning: unused import: `rand::rngs::StdRng`
  --> aiSimulator/iteration.rs:11:5
   |
11 | use rand::rngs::StdRng;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::run_simulation_with_best_actions`
  --> aiSimulator/iteration.rs:12:5
   |
12 | use crate::run_simulation_with_best_actions;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `evaluate_action_impact` and `score_metrics`
  --> aiSimulator/main.rs:50:75
   |
50 | use crate::action_weights::{ActionWeights, GridAction, SimulationMetrics, evaluate_action_impact, ActionResult, score_metrics};
   |                                                                           ^^^^^^^^^^^^^^^^^^^^^^                ^^^^^^^^^^^^^

warning: unused import: `crate::constants::*`
  --> aiSimulator/main.rs:51:5
   |
51 | use crate::constants::*;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `PowerCalcType` and `WeightsUpdateType`
  --> aiSimulator/main.rs:52:53
   |
52 | use crate::logging::{OperationCategory, FileIOType, PowerCalcType, WeightsUpdateType};
   |                                                     ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^

warning: unused import: `crate::csv_export::CsvExporter`
  --> aiSimulator/main.rs:53:5
   |
53 | use crate::csv_export::CsvExporter;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CarbonOffsetType` and `CarbonOffset`
  --> aiSimulator/main.rs:54:28
   |
54 | use crate::carbon_offset::{CarbonOffset, CarbonOffsetType};
   |                            ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^

warning: unused import: `SimulationResult`
  --> aiSimulator/main.rs:55:37
   |
55 | use crate::metrics::{YearlyMetrics, SimulationResult};
   |                                     ^^^^^^^^^^^^^^^^

warning: unused import: `run_simulation`
  --> aiSimulator/main.rs:57:25
   |
57 | use crate::simulation::{run_simulation, handle_power_deficit};
   |                         ^^^^^^^^^^^^^^

warning: unused import: `crate::iteration::run_iteration`
  --> aiSimulator/main.rs:61:5
   |
61 | use crate::iteration::run_iteration;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `rayon::prelude`
  --> aiSimulator/main.rs:14:5
   |
14 | use rayon::prelude::*;
   |     ^^^^^^^^^^^^^^

warning: unused variable: `year`
   --> aiSimulator/generator.rs:300:34
    |
300 |     pub fn get_base_power(&self, year: u32) -> f64 {
    |                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_year`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `constraints`
   --> aiSimulator/generator.rs:547:60
    |
547 |     pub fn adjust_operation(&mut self, new_percentage: u8, constraints: &GeneratorConstraints) -> bool {
    |                                                            ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_constraints`

warning: unused variable: `year`
   --> aiSimulator/map_handler.rs:724:41
    |
724 |     pub fn calc_total_population(&self, year: u32) -> u32 {
    |                                         ^^^^ help: if this is intentional, prefix it with an underscore: `_year`

warning: variable `excess_intermittent` is assigned to, but never used
   --> aiSimulator/map_handler.rs:745:17
    |
745 |         let mut excess_intermittent = 0.0;
    |                 ^^^^^^^^^^^^^^^^^^^
    |
    = note: consider using `_excess_intermittent` instead

warning: unused variable: `hour`
   --> aiSimulator/map_handler.rs:781:58
    |
781 |     pub fn handle_power_deficit(&mut self, deficit: f64, hour: Option<u8>) -> f64 {
    |                                                          ^^^^ help: if this is intentional, prefix it with an underscore: `_hour`

warning: unused variable: `location`
    --> aiSimulator/map_handler.rs:1119:29
     |
1119 |     fn get_elevation(&self, location: &Coordinate) -> f64 {
     |                             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_location`

warning: unused variable: `year`
   --> aiSimulator/const_funcs.rs:223:59
    |
223 | pub fn calculate_energy_sales_revenue(power_surplus: f64, year: u32, sales_rate: f64) -> f64 {
    |                                                           ^^^^ help: if this is intentional, prefix it with an underscore: `_year`

warning: unused variable: `best_weights`
   --> aiSimulator/action_weights.rs:293:29
    |
293 |                 if let Some(best_weights) = &self.best_weights {
    |                             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_best_weights`

warning: variable does not need to be mutable
    --> aiSimulator/action_weights.rs:1386:29
     |
1386 |                         let mut reward_actions: Vec<GridAction> = Vec::new();
     |                             ----^^^^^^^^^^^^^^
     |                             |
     |                             help: remove this `mut`
     |
     = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `best_score`
    --> aiSimulator/action_weights.rs:1671:17
     |
1671 |             let best_score = score_metrics(best_metrics, self.optimization_mode.as_deref());
     |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_best_score`

warning: unused variable: `start`
   --> aiSimulator/logging.rs:155:28
    |
155 |         if let Some((_, _, start)) = stack.pop() {
    |                            ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`

warning: unused variable: `total_action_costs`
   --> aiSimulator/csv_export.rs:103:17
    |
103 |         let mut total_action_costs = 0.0;
    |                 ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_total_action_costs`

warning: variable does not need to be mutable
   --> aiSimulator/csv_export.rs:103:13
    |
103 |         let mut total_action_costs = 0.0;
    |             ----^^^^^^^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `yearly_metrics_map`
   --> aiSimulator/csv_export.rs:301:13
    |
301 |         let yearly_metrics_map: std::collections::HashMap<u32, &YearlyMetrics> = yearly_metrics
    |             ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_yearly_metrics_map`

warning: unused variable: `settlement_index`
   --> aiSimulator/csv_export.rs:449:21
    |
449 |                 let settlement_index = settlements.iter().position(|s| s.get_id() == id).unwrap_or(0);
    |                     ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_settlement_index`

warning: unused variable: `generator_map`
   --> aiSimulator/csv_export.rs:523:13
    |
523 |         let generator_map: std::collections::HashMap<&str, &Generator> = generators
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generator_map`

warning: unused variable: `state_log_file`
  --> aiSimulator/simulation.rs:56:9
   |
56 |     let state_log_file = if verbose_logging {
   |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_state_log_file`

warning: unused variable: `power_improvement`
   --> aiSimulator/simulation.rs:352:17
    |
352 |             let power_improvement = if new_state.power_balance > current_state.power_balance {
    |                 ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_power_improvement`

warning: unused variable: `optimization_mode`
   --> aiSimulator/simulation.rs:218:5
    |
218 |     optimization_mode: Option<&str>,
    |     ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_optimization_mode`

warning: unused variable: `iteration`
  --> aiSimulator/iteration.rs:15:5
   |
15 |     iteration: usize,
   |     ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_iteration`

warning: unused variable: `replay_best_strategy`
  --> aiSimulator/iteration.rs:18:5
   |
18 |     replay_best_strategy: bool,
   |     ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_replay_best_strategy`

warning: unused variable: `verbose_logging`
   --> aiSimulator/main.rs:238:5
    |
238 |     verbose_logging: bool,
    |     ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_verbose_logging`

warning: constant `SIMULATION_END_YEAR` is never used
  --> aiSimulator/main.rs:70:7
   |
70 | const SIMULATION_END_YEAR: u32 = 2050;
   |       ^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `FULL_RUN_PERCENTAGE` is never used
  --> aiSimulator/main.rs:72:7
   |
72 | const FULL_RUN_PERCENTAGE: usize = 10;
   |       ^^^^^^^^^^^^^^^^^^^

warning: constant `REPLAY_BEST_STRATEGY_IN_FULL_RUNS` is never used
  --> aiSimulator/main.rs:74:7
   |
74 | const REPLAY_BEST_STRATEGY_IN_FULL_RUNS: bool = true;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `run_simulation_with_best_actions` is never used
   --> aiSimulator/main.rs:234:4
    |
234 | fn run_simulation_with_best_actions(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `metrics_to_action_result` is never used
   --> aiSimulator/main.rs:409:4
    |
409 | fn metrics_to_action_result(metrics: &SimulationMetrics) -> ActionResult {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `get_current_operating_cost`, `calc_cost_over_time`, `can_upgrade_efficiency`, `get_min_operation_percentage`, and `get_size` are never used
   --> aiSimulator/generator.rs:494:12
    |
385 | impl Generator {
    | -------------- methods in this implementation
...
494 |     pub fn get_current_operating_cost(&self, year: u32) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
510 |     pub fn calc_cost_over_time(&self, years: u32) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^
...
523 |     pub fn can_upgrade_efficiency(&self, year: u32, constraints: &GeneratorConstraints) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
606 |     pub fn get_min_operation_percentage(&self) -> u8 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
620 |     pub fn get_size(&self) -> f64 {
    |            ^^^^^^^^

warning: method `calculate_generator_suitability` is never used
  --> aiSimulator/map_handler.rs:31:8
   |
30 | pub trait LocationAnalysisSource {
   |           ---------------------- method in this trait
31 |     fn calculate_generator_suitability(&self, coordinate: &Coordinate, generator_type: &GeneratorType) -> f64;
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `analyze_map`, `print_summary`, `save_to_file`, and `save_cache` are never used
   --> aiSimulator/map_handler.rs:51:12
    |
50  | impl LocationAnalysis {
    | --------------------- associated items in this implementation
51  |     pub fn analyze_map(map: &Map, min_suitability: f64) -> Self {
    |            ^^^^^^^^^^^
...
162 |     pub fn print_summary(&self) {
    |            ^^^^^^^^^^^^^
...
191 |     pub fn save_to_file(&self, path: &str) -> std::io::Result<()> {
    |            ^^^^^^^^^^^^
...
226 |     pub fn save_cache(&self, cache_dir: &str) -> std::io::Result<()> {
    |            ^^^^^^^^^^

warning: associated items `load_coastline`, `load_from_json`, `save_to_json`, `remove_generator`, and `analyze_locations` are never used
    --> aiSimulator/map_handler.rs:496:12
     |
316  | impl Map {
     | -------- associated items in this implementation
...
496  |     pub fn load_coastline(&mut self, coastline_points: Vec<Coordinate>) {
     |            ^^^^^^^^^^^^^^
...
503  |     pub fn load_from_json(path: &str) -> Result<Self> {
     |            ^^^^^^^^^^^^^^
...
509  |     pub fn save_to_json(&self, path: &str) -> Result<()> {
     |            ^^^^^^^^^^^^
...
666  |     pub fn remove_generator(&mut self, id: &str) -> Option<Generator> {
     |            ^^^^^^^^^^^^^^^^
...
1317 |     pub fn analyze_locations(&self, min_suitability: f64) -> LocationAnalysis {
     |            ^^^^^^^^^^^^^^^^^

warning: methods `get_current_operating_cost` and `get_power_consumption` are never used
   --> aiSimulator/carbon_offset.rs:92:12
    |
52  | impl CarbonOffset {
    | ----------------- methods in this implementation
...
92  |     pub fn get_current_operating_cost(&self, year: u32) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
125 |     pub fn get_power_consumption(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: constant `DIVERGENCE_FOR_NEGATIVE_WEIGHT` is never used
  --> aiSimulator/action_weights.rs:20:7
   |
20 | const DIVERGENCE_FOR_NEGATIVE_WEIGHT: f64 = 0.03; // The difference of improvement necessary for a negative weight
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `DIVERGENCE_EXPONENT` is never used
  --> aiSimulator/action_weights.rs:21:7
   |
21 | const DIVERGENCE_EXPONENT: f64 = 0.3; // How rapidly to increase penalty with worse divergence (lower = more severe for values < 1)
   |       ^^^^^^^^^^^^^^^^^^^

warning: constant `STAGNATION_PENALTY_FACTOR` is never used
  --> aiSimulator/action_weights.rs:22:7
   |
22 | const STAGNATION_PENALTY_FACTOR: f64 = 0.2; // Base factor for stagnation penalty
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `STAGNATION_EXPONENT` is never used
  --> aiSimulator/action_weights.rs:23:7
   |
23 | const STAGNATION_EXPONENT: f64 = 1.8; // How rapidly to increase penalty with more iterations without improvement
   |       ^^^^^^^^^^^^^^^^^^^

warning: constant `FORCE_REPLAY_THRESHOLD` is never used
  --> aiSimulator/action_weights.rs:24:7
   |
24 | const FORCE_REPLAY_THRESHOLD: u32 = 1000; // After this many iterations without improvement, start forcing replay
   |       ^^^^^^^^^^^^^^^^^^^^^^

warning: constant `ITERATIONS_FOR_RANDOMIZATION` is never used
  --> aiSimulator/action_weights.rs:25:7
   |
25 | const ITERATIONS_FOR_RANDOMIZATION: u32 = 1000; // After this many iterations without improvement, apply randomization
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `guaranteed_best_actions` is never read
   --> aiSimulator/action_weights.rs:137:5
    |
121 | pub struct ActionWeights {
    |            ------------- field in this struct
...
137 |     guaranteed_best_actions: bool, // Flag to force replay of best actions with 100% probability
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `ActionWeights` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple methods are never used
    --> aiSimulator/action_weights.rs:271:12
     |
141  | impl ActionWeights {
     | ------------------ methods in this implementation
...
271  |     pub fn start_new_iteration(&mut self) {
     |            ^^^^^^^^^^^^^^^^^^^
...
1227 |     pub fn update_action_count_weights(&mut self, year: u32, action_count: u32, improvement: f64) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1304 |     pub fn apply_contrast_learning(&mut self, current_metrics: &SimulationMetrics) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^
...
1461 |     pub fn update_best_deficit_actions(&mut self) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1505 |     pub fn get_best_deficit_actions_for_year(&self, year: u32) -> Option<&Vec<GridAction>> {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1517 |     pub fn get_current_run_actions_for_year(&self, year: u32) -> Option<&Vec<GridAction>> {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1522 |     pub fn get_current_deficit_actions_for_year(&self, year: u32) -> Option<&Vec<GridAction>> {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1644 |     pub fn restore_best_weights(&mut self, best_weight_factor: f64) {
     |            ^^^^^^^^^^^^^^^^^^^^
...
1668 |     pub fn apply_deficit_contrast_learning(&mut self) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1925 |     pub fn get_best_actions_for_year(&self, year: u32) -> Option<&Vec<GridAction>> {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
1959 |     pub fn debug_print_deficit_actions(&self) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1986 |     pub fn set_force_best_actions(&mut self, force: bool) {
     |            ^^^^^^^^^^^^^^^^^^^^^^
...
1991 |     pub fn set_guaranteed_best_actions(&mut self, force: bool) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1999 |     pub fn set_optimization_mode(&mut self, mode: Option<String>) {
     |            ^^^^^^^^^^^^^^^^^^^^^
...
2003 |     pub fn get_optimization_mode(&self) -> Option<&str> {
     |            ^^^^^^^^^^^^^^^^^^^^^

warning: fields `grid_x` and `grid_y` are never read
  --> aiSimulator/settlements_loader.rs:15:9
   |
10 | pub struct SettlementData {
   |            -------------- fields in this struct
...
15 |     pub grid_x: f64,
   |         ^^^^^^
16 |     pub grid_y: f64,
   |         ^^^^^^
   |
   = note: `SettlementData` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: variant `InvalidLocation` is never constructed
  --> aiSimulator/generators_loader.rs:16:5
   |
10 | pub enum GeneratorLoadError {
   |          ------------------ variant in this enum
...
16 |     InvalidLocation(String),
   |     ^^^^^^^^^^^^^^^
   |
   = note: `GeneratorLoadError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `total_occupancy` is never read
  --> aiSimulator/spatial_index.rs:10:5
   |
6  | pub struct QuadTreeNode {
   |            ------------ field in this struct
...
10 |     total_occupancy: f64,
   |     ^^^^^^^^^^^^^^^
   |
   = note: `QuadTreeNode` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: methods `contains_point`, `get_suitability_score`, and `update_occupancy` are never used
   --> aiSimulator/spatial_index.rs:80:12
    |
30  | impl QuadTreeNode {
    | ----------------- methods in this implementation
...
80  |     pub fn contains_point(&self, point: &Coordinate) -> bool {
    |            ^^^^^^^^^^^^^^
...
87  |     pub fn get_suitability_score(&self, suitability_type: GeneratorSuitabilityType) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
112 |     pub fn update_occupancy(&mut self, delta: f64) {
    |            ^^^^^^^^^^^^^^^^

warning: methods `find_best_location` and `search_suitable_locations` are never used
   --> aiSimulator/spatial_index.rs:157:12
    |
146 | impl SpatialIndex {
    | ----------------- methods in this implementation
...
157 |     pub fn find_best_location(
    |            ^^^^^^^^^^^^^^^^^^
...
170 |     fn search_suitable_locations<'a>(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variant `Other` is never constructed
  --> aiSimulator/logging.rs:27:5
   |
13 | pub enum OperationCategory {
   |          ----------------- variant in this enum
...
27 |     Other,
   |     ^^^^^
   |
   = note: `OperationCategory` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: variants `ConstraintValidation` and `Other` are never constructed
  --> aiSimulator/logging.rs:43:5
   |
40 | pub enum LocationSearchType {
   |          ------------------ variants in this enum
...
43 |     ConstraintValidation,
   |     ^^^^^^^^^^^^^^^^^^^^
44 |     Other,
   |     ^^^^^
   |
   = note: `LocationSearchType` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: variants `StrategyOptimization` and `MetricsCalculation` are never constructed
  --> aiSimulator/logging.rs:50:5
   |
48 | pub enum WeightsUpdateType {
   |          ----------------- variants in this enum
49 |     ActionUpdate,
50 |     StrategyOptimization,
   |     ^^^^^^^^^^^^^^^^^^^^
51 |     MetricsCalculation,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: `WeightsUpdateType` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: variants `CheckpointSave`, `CheckpointLoad`, `ResultsSave`, and `Other` are never constructed
  --> aiSimulator/logging.rs:57:5
   |
56 | pub enum FileIOType {
   |          ---------- variants in this enum
57 |     CheckpointSave,
   |     ^^^^^^^^^^^^^^
58 |     CheckpointLoad,
   |     ^^^^^^^^^^^^^^
59 |     DataLoad,
60 |     ResultsSave,
   |     ^^^^^^^^^^^
61 |     Other,
   |     ^^^^^
   |
   = note: `FileIOType` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: function `transform_grid_to_lat_lon` is never used
  --> aiSimulator/csv_export.rs:17:4
   |
17 | fn transform_grid_to_lat_lon(x: f64, y: f64) -> (f64, f64) {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `CsvExporter` is never constructed
  --> aiSimulator/csv_export.rs:25:12
   |
25 | pub struct CsvExporter {
   |            ^^^^^^^^^^^

warning: multiple associated items are never used
   --> aiSimulator/csv_export.rs:32:12
    |
30  | impl CsvExporter {
    | ---------------- associated items in this implementation
31  |     /// Create a new CSV exporter with the specified output directory
32  |     pub fn new(output_dir: impl AsRef<Path>) -> Self {
    |            ^^^
...
47  |     pub fn export_simulation_results(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
68  |     fn export_simulation_summary(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
240 |     fn export_yearly_details(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
262 |     fn export_settlements_data(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
488 |     fn export_generators_data(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
869 |     fn export_carbon_offsets_data(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
978 |     fn export_generator_operation_logs(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: trait `SettlementExtensions` is never used
    --> aiSimulator/csv_export.rs:1195:7
     |
1195 | trait SettlementExtensions {
     |       ^^^^^^^^^^^^^^^^^^^^

warning: trait `CarbonOffsetExtensions` is never used
    --> aiSimulator/csv_export.rs:1207:7
     |
1207 | trait CarbonOffsetExtensions {
     |       ^^^^^^^^^^^^^^^^^^^^^^

warning: struct `YearlyMetrics` is never constructed
    --> aiSimulator/csv_export.rs:1261:12
     |
1261 | pub struct YearlyMetrics {
     |            ^^^^^^^^^^^^^
     |
     = note: `YearlyMetrics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: function `convert_yearly_metrics` is never used
    --> aiSimulator/csv_export.rs:1289:8
     |
1289 | pub fn convert_yearly_metrics<T>(metrics: &[T]) -> Vec<YearlyMetrics> 
     |        ^^^^^^^^^^^^^^^^^^^^^^

warning: multiple methods are never used
    --> aiSimulator/csv_export.rs:1324:8
     |
1323 | pub trait YearlyMetricsLike {
     |           ----------------- methods in this trait
1324 |     fn get_year(&self) -> u32;
     |        ^^^^^^^^
1325 |     fn get_total_population(&self) -> u32;
     |        ^^^^^^^^^^^^^^^^^^^^
1326 |     fn get_total_power_usage(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^
1327 |     fn get_total_power_generation(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
1328 |     fn get_power_balance(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^
1329 |     fn get_average_public_opinion(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
1330 |     fn get_yearly_capital_cost(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^
1331 |     fn get_total_capital_cost(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^
1332 |     fn get_inflation_factor(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^
1333 |     fn get_total_co2_emissions(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^
1334 |     fn get_total_carbon_offset(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^
1335 |     fn get_net_co2_emissions(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^
1336 |     fn get_yearly_carbon_credit_revenue(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1337 |     fn get_total_carbon_credit_revenue(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1338 |     fn get_generator_efficiencies(&self) -> Vec<(String, f64)>;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
1339 |     fn get_generator_operations(&self) -> Vec<(String, f64)>;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
1340 |     fn get_active_generators(&self) -> usize;
     |        ^^^^^^^^^^^^^^^^^^^^^
1341 |     fn get_yearly_upgrade_costs(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
1342 |     fn get_yearly_closure_costs(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
1343 |     fn get_yearly_total_cost(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^
1344 |     fn get_total_cost(&self) -> f64;
     |        ^^^^^^^^^^^^^^
1345 |     fn get_yearly_energy_sales_revenue(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1346 |     fn get_total_energy_sales_revenue(&self) -> f64;
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `export_dir` is never read
   --> aiSimulator/multi_simulation.rs:787:9
    |
786 |     pub struct CsvExporter {
    |                ----------- field in this struct
787 |         export_dir: std::path::PathBuf,
    |         ^^^^^^^^^^

warning: `eirgrid` (bin "eirgrid") generated 97 warnings (run `cargo fix --bin "eirgrid"` to apply 39 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.90s
     Running `target/debug/eirgrid -n 1 --enable-energy-sales -v`
EirGrid Power System Simulator (2025-2050)
Debug: no_continue = false, continue_from_checkpoint = true
Failed to load generators from CSV: IO error: No such file or directory (os error 2). Using fallback generators.
Checking for weights in: "checkpoints/20240308_194051"
No weights found in latest directory, starting fresh
Starting multi-simulation optimization with 1 iterations (0 completed, 1 remaining) in directory checkpoints/20240308_194100
📝 Creating verbose state log at: simulation_states/simulation_state_20250308_194100.log

=== STARTING SIMULATION ===
✅ Best actions recorded: 0 across 0 years
✅ Best deficit actions recorded: 0 across 0 years
Action distribution per year:
❌ No best metrics recorded yet
Total iterations: 0
Iterations without improvement: 0
📊 DEBUG: Actions recorded in current run:
  Total: 90 actions across 19 years
  Per-year action counts:
    Year 2025: 12 actions
    Year 2026: 1 actions
    Year 2028: 3 actions
    Year 2033: 7 actions
    Year 2034: 3 actions
    Year 2035: 13 actions
    Year 2036: 8 actions
    Year 2037: 4 actions
    Year 2038: 1 actions
    Year 2039: 7 actions
    Year 2040: 9 actions
    Year 2041: 1 actions
    Year 2043: 2 actions
    Year 2044: 2 actions
    Year 2045: 1 actions
    Year 2046: 1 actions
    Year 2048: 9 actions
    Year 2049: 3 actions
    Year 2050: 3 actions
DEBUG: Transferred 90 actions across 19 years from local weights
DEBUG: Before update - Current run has 90 actions across 19 years
Current run actions per year:



🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟
================================================================================
🎉🎉🎉  FIRST SUCCESSFUL STRATEGY FOUND!  🎉🎉🎉
================================================================================
🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟

Initial score: 1.5000

📊 INITIAL METRICS:
  Net emissions: 0.00 tonnes
  Total cost: €0.00B/year
  Public opinion: 0.0%
  Power reliability: 0.0%
================================================================================
🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟🌟


Recording first strategy with 90 regular actions and 9 deficit actions
DEBUG: Copying 12 actions for year 2025 to best_actions
DEBUG: Copying 4 actions for year 2037 to best_actions
DEBUG: Copying 3 actions for year 2049 to best_actions
DEBUG: Copying 3 actions for year 2050 to best_actions
DEBUG: Copying 7 actions for year 2039 to best_actions
DEBUG: Copying 1 actions for year 2041 to best_actions
DEBUG: Copying 3 actions for year 2028 to best_actions
DEBUG: Copying 9 actions for year 2040 to best_actions
DEBUG: Copying 13 actions for year 2035 to best_actions
DEBUG: Copying 8 actions for year 2036 to best_actions
DEBUG: Copying 1 actions for year 2026 to best_actions
DEBUG: Copying 3 actions for year 2034 to best_actions
DEBUG: Copying 2 actions for year 2043 to best_actions
DEBUG: Copying 2 actions for year 2044 to best_actions
DEBUG: Copying 1 actions for year 2045 to best_actions
DEBUG: Copying 1 actions for year 2038 to best_actions
DEBUG: Copying 1 actions for year 2046 to best_actions
DEBUG: Copying 7 actions for year 2033 to best_actions
DEBUG: Copying 9 actions for year 2048 to best_actions
DEBUG: Copying 9 deficit actions for year 2025 to best_deficit_actions
DEBUG: Created best_actions map with 90 actions across 19 years
Complete actions per year (to be stored as best):
  Year 2025: 12 actions
  Year 2026: 1 actions
  Year 2028: 3 actions
  Year 2033: 7 actions
  Year 2034: 3 actions
  Year 2035: 13 actions
  Year 2036: 8 actions
  Year 2037: 4 actions
  Year 2038: 1 actions
  Year 2039: 7 actions
  Year 2040: 9 actions
  Year 2041: 1 actions
  Year 2043: 2 actions
  Year 2044: 2 actions
  Year 2045: 1 actions
  Year 2046: 1 actions
  Year 2048: 9 actions
  Year 2049: 3 actions
  Year 2050: 3 actions
DEBUG: After update - best_actions now has 90 actions across 19 years
Best actions per year after storage:
  Year 2025: 12 best actions
  Year 2026: 1 best actions
  Year 2028: 3 best actions
  Year 2033: 7 best actions
  Year 2034: 3 best actions
  Year 2035: 13 best actions
  Year 2036: 8 best actions
  Year 2037: 4 best actions
  Year 2038: 1 best actions
  Year 2039: 7 best actions
  Year 2040: 9 best actions
  Year 2041: 1 best actions
  Year 2043: 2 best actions
  Year 2044: 2 best actions
  Year 2045: 1 best actions
  Year 2046: 1 best actions
  Year 2048: 9 best actions
  Year 2049: 3 best actions
  Year 2050: 3 best actions

================================================================================
🏆 BEST SIMULATION RESULTS SUMMARY 🏆
================================================================================
Final net emissions: 0.00 tonnes
Emissions Status: ✅ NET ZERO ACHIEVED
Average public opinion: 0.0%
Total cost: €0.00 billion accumulated (✅ WITHIN BUDGET)
Power reliability: 0.0%
================================================================================
Applying all actions to map for CSV export...
Fast mode: Attempting to add Nuclear generator
  Available spaces: 180
Fast mode: Attempting to add HydroDam generator
  Available spaces: 2601
Fast mode: Attempting to add CommercialSolar generator
  Available spaces: 180
Fast mode: Attempting to add OffshoreWind generator
  Available spaces: 2421
Fast mode: Attempting to add HydroDam generator
  Available spaces: 2600
Fast mode: Attempting to add WaveEnergy generator
  Available spaces: 2421
Fast mode: Attempting to add TidalGenerator generator
  Available spaces: 2421
Fast mode: Attempting to add GasPeaker generator
  Available spaces: 180
Fast mode: Attempting to add Nuclear generator
  Available spaces: 179
Fast mode: Attempting to add HydroDam generator
  Available spaces: 2599
Fast mode: Attempting to add BatteryStorage generator
  Available spaces: 180
Fast mode: Attempting to add Biomass generator
  Available spaces: 180
Fast mode: Attempting to add DomesticSolar generator
  Available spaces: 180
Fast mode: Attempting to add OffshoreWind generator
  Available spaces: 2420
Fast mode: Attempting to add TidalGenerator generator
  Available spaces: 2420
Fast mode: Attempting to add GasPeaker generator
  Available spaces: 179
Fast mode: Attempting to add OffshoreWind generator
  Available spaces: 2419
Fast mode: Attempting to add BatteryStorage generator
  Available spaces: 179
Fast mode: Attempting to add OnshoreWind generator
  Available spaces: 2601
Fast mode: Attempting to add Nuclear generator
  Available spaces: 178
Fast mode: Attempting to add TidalGenerator generator
  Available spaces: 2419
Fast mode: Attempting to add UtilitySolar generator
  Available spaces: 180
Fast mode: Attempting to add UtilitySolar generator
  Available spaces: 179
Fast mode: Attempting to add Nuclear generator
  Available spaces: 177
Fast mode: Attempting to add OnshoreWind generator
  Available spaces: 2600
Fast mode: Attempting to add TidalGenerator generator
  Available spaces: 2418
Fast mode: Attempting to add GasCombinedCycle generator
  Available spaces: 180
Fast mode: Attempting to add UtilitySolar generator
  Available spaces: 178
Fast mode: Attempting to add CommercialSolar generator
  Available spaces: 179
Fast mode: Attempting to add GasPeaker generator
  Available spaces: 178
Fast mode: Attempting to add WaveEnergy generator
  Available spaces: 2420
Fast mode: Attempting to add CoalPlant generator
  Available spaces: 180
Fast mode: Attempting to add Nuclear generator
  Available spaces: 176
Fast mode: Attempting to add Nuclear generator
  Available spaces: 175
Fast mode: Attempting to add UtilitySolar generator
  Available spaces: 177
Fast mode: Attempting to add PumpedStorage generator
  Available spaces: 2601
Fast mode: Attempting to add Biomass generator
  Available spaces: 179
Fast mode: Attempting to add Biomass generator
  Available spaces: 178
Fast mode: Attempting to add DomesticSolar generator
  Available spaces: 179
Fast mode: Attempting to add WaveEnergy generator
  Available spaces: 2419
Fast mode: Attempting to add TidalGenerator generator
  Available spaces: 2417
Fast mode: Attempting to add Biomass generator
  Available spaces: 177
Fast mode: Attempting to add BatteryStorage generator
  Available spaces: 178
Fast mode: Attempting to add HydroDam generator
  Available spaces: 2598
Fast mode: Attempting to add OnshoreWind generator
  Available spaces: 2599
Fast mode: Attempting to add DomesticSolar generator
  Available spaces: 178
Fast mode: Attempting to add GasPeaker generator
  Available spaces: 177
Fast mode: Attempting to add UtilitySolar generator
  Available spaces: 176
Fast mode: Attempting to add GasPeaker generator
  Available spaces: 176
Fast mode: Attempting to add PumpedStorage generator
  Available spaces: 2600
Fast mode: Attempting to add OnshoreWind generator
  Available spaces: 2598
Fast mode: Attempting to add HydroDam generator
  Available spaces: 2597
Fast mode: Attempting to add Biomass generator
  Available spaces: 176
Fast mode: Attempting to add UtilitySolar generator
  Available spaces: 175
Fast mode: Attempting to add DomesticSolar generator
  Available spaces: 177
Fast mode: Attempting to add Nuclear generator
  Available spaces: 174
Fast mode: Attempting to add Biomass generator
  Available spaces: 175
Fast mode: Attempting to add GasCombinedCycle generator
  Available spaces: 179
Fast mode: Attempting to add GasCombinedCycle generator
  Available spaces: 178

Enhanced simulation results exported to: checkpoints/20240308_194100/enhanced_csv
Use these files for detailed analysis and visualization.
Final weights saved to: checkpoints/20240308_194100/best_weights.json
